{"ast":null,"code":"var _jsxFileName = \"/Users/joseurbani/Documents/GitHub/Weather-App/src/components/Ciudad.jsx\",\n    _s = $RefreshSig$();\n\nimport { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_KEY = process.env.REACT_APP_API_KEY;\nexport default function Ciudad() {\n  _s();\n\n  const [city, setcity] = useState(undefined); //Escuchamos id de los parametros\n\n  const {\n    id\n  } = useParams(); //creamos un efecto que se inicia cada vez que se cambia el parametro id\n\n  useEffect(() => {\n    fetch(`http://api.openweathermap.org/data/2.5/weather?id=${id}&appid=${API_KEY}&units=metric`) //sucersor de AJAX\n    //el fech nos trae la respuesta r del servidor API\n    .then(r => r.json()) //convierte la respuesta en json (ponele que llegue en xml)\n    .then(recurso => {\n      if (recurso.main !== undefined) {\n        const ciudad = {\n          //  *  aca se setea a la ciudad como un objeto \n          min: Math.round(recurso.main.temp_min),\n          max: Math.round(recurso.main.temp_max),\n          img: recurso.weather[0].icon,\n          id: recurso.id,\n          wind: recurso.wind.speed,\n          temp: recurso.main.temp,\n          name: recurso.name,\n          weather: recurso.weather[0].main,\n          clouds: recurso.clouds.all,\n          latitud: recurso.coord.lat,\n          longitud: recurso.coord.lon\n        };\n        setcity(ciudad);\n      } else {\n        //  *  o la setea como nulo\n        setcity(null);\n      }\n    });\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [city === undefined && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 30\n    }, this), city === null && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Ciudad no encontrada\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }, this), city && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ciudad\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: city.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Temperatura: \", city.temp, \" \\xBAC\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Clima: \", city.weather]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Viento: \", city.wind, \" km/h\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Cantidad de nubes: \", city.clouds]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Latitud: \", city.latitud, \"\\xBA\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Longitud: \", city.longitud, \"\\xBA\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n} //   switch (typeof city)\n// {\n//     case \"undefined\": \n//     return <h1>Cargando...</h1>;\n//     break;\n//     case \"objet\":\n//  return (\n//     <div className=\"ciudad\">\n//       <div className=\"container\">\n//         <h2>{city.name}</h2>\n//         <div className=\"info\">\n//           <div>Temperatura: {city.temp} ยบC</div>\n//           <div>Clima: {city.weather}</div>\n//           <div>Viento: {city.wind} km/h</div>\n//           <div>Cantidad de nubes: {city.clouds}</div>\n//           <div>Latitud: {city.latitud}ยบ</div>\n//           <div>Longitud: {city.longitud}ยบ</div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n//   break;\n//   default: \n//   return <h1>Ciudad no encontrada</h1> //default seria lo mismo que poner 'case \"null\":'\n// }\n// break;\n// } \n\n_s(Ciudad, \"0ww0tOOlyR3u3Tu6jRL6PZ2Yh1U=\", false, function () {\n  return [useParams];\n});\n\n_c = Ciudad;\n\nvar _c;\n\n$RefreshReg$(_c, \"Ciudad\");","map":{"version":3,"sources":["/Users/joseurbani/Documents/GitHub/Weather-App/src/components/Ciudad.jsx"],"names":["useParams","useEffect","useState","API_KEY","process","env","REACT_APP_API_KEY","Ciudad","city","setcity","undefined","id","fetch","then","r","json","recurso","main","ciudad","min","Math","round","temp_min","max","temp_max","img","weather","icon","wind","speed","temp","name","clouds","all","latitud","coord","lat","longitud","lon"],"mappings":"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","sourcesContent":["import { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nexport default function Ciudad() {\n  const [city, setcity] = useState(undefined);\n\n  //Escuchamos id de los parametros\n  const { id } = useParams();\n\n  //creamos un efecto que se inicia cada vez que se cambia el parametro id\n  useEffect(() => {\n      fetch(\n        `http://api.openweathermap.org/data/2.5/weather?id=${id}&appid=${API_KEY}&units=metric`\n      ) //sucersor de AJAX\n        //el fech nos trae la respuesta r del servidor API\n\n        .then((r) => r.json()) //convierte la respuesta en json (ponele que llegue en xml)\n\n        .then((recurso) => {\n          if (recurso.main !== undefined) {\n            const ciudad = { //  *  aca se setea a la ciudad como un objeto \n              min: Math.round(recurso.main.temp_min),\n              max: Math.round(recurso.main.temp_max),\n              img: recurso.weather[0].icon,\n              id: recurso.id,\n              wind: recurso.wind.speed,\n              temp: recurso.main.temp,\n              name: recurso.name,\n              weather: recurso.weather[0].main,\n              clouds: recurso.clouds.all,\n              latitud: recurso.coord.lat,\n              longitud: recurso.coord.lon,\n            };\n            setcity (ciudad);\n          } else { //  *  o la setea como nulo\n            setcity(null);\n          }\n        });\n  }, [id]);\n\n  return (<>\n      {city === undefined && <h1>Cargando...</h1> }\n\n      {city === null && <h1>Ciudad no encontrada</h1>}\n\n      {city && (\n    <div className=\"ciudad\">\n      <div className=\"container\">\n        <h2>{city.name}</h2>\n        <div className=\"info\">\n          <div>Temperatura: {city.temp} ยบC</div>\n          <div>Clima: {city.weather}</div>\n          <div>Viento: {city.wind} km/h</div>\n          <div>Cantidad de nubes: {city.clouds}</div>\n          <div>Latitud: {city.latitud}ยบ</div>\n          <div>Longitud: {city.longitud}ยบ</div>\n        </div>\n      </div>\n    </div>\n    )}\n      \n  </>);\n}\n//   switch (typeof city)\n// {\n//     case \"undefined\": \n//     return <h1>Cargando...</h1>;\n//     break;\n\n//     case \"objet\":\n//  return (\n//     <div className=\"ciudad\">\n//       <div className=\"container\">\n//         <h2>{city.name}</h2>\n//         <div className=\"info\">\n//           <div>Temperatura: {city.temp} ยบC</div>\n//           <div>Clima: {city.weather}</div>\n//           <div>Viento: {city.wind} km/h</div>\n//           <div>Cantidad de nubes: {city.clouds}</div>\n//           <div>Latitud: {city.latitud}ยบ</div>\n//           <div>Longitud: {city.longitud}ยบ</div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n//   break;\n//   default: \n//   return <h1>Ciudad no encontrada</h1> //default seria lo mismo que poner 'case \"null\":'\n// }\n// break;\n// } "]},"metadata":{},"sourceType":"module"}