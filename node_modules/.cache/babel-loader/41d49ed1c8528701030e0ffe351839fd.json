{"ast":null,"code":"var _jsxFileName = \"/Users/joseurbani/Desktop/Demo/FT-M2/06-React-Intro/homework/src/components/Cards.jsx\";\nimport React from \"react\"; //import cities from '../data';//z\n\nimport Card from \"./Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Cards(props) {\n  // acá va tu código\n  // tip, podés usar un map\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.cities ? props.cities.map(cities => /*#__PURE__*/_jsxDEV(Card, {\n      name: cities.name,\n      min: cities.main.temp_min,\n      max: cities.main.temp_max,\n      img: cities.weather[0].icon\n    }, city.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Error 040, cerebro not found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n_c = Cards;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"sources":["/Users/joseurbani/Desktop/Demo/FT-M2/06-React-Intro/homework/src/components/Cards.jsx"],"names":["React","Card","Cards","props","cities","map","name","main","temp_min","temp_max","weather","icon","city","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACnC;AACA;AAEA,sBACE;AAAA,cACGA,KAAK,CAACC,MAAN,GACCD,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAkBD,MAAD,iBACf,QAAC,IAAD;AACE,MAAA,IAAI,EAAEA,MAAM,CAACE,IADf;AAEE,MAAA,GAAG,EAAEF,MAAM,CAACG,IAAP,CAAYC,QAFnB;AAGE,MAAA,GAAG,EAAEJ,MAAM,CAACG,IAAP,CAAYE,QAHnB;AAIE,MAAA,GAAG,EAAEL,MAAM,CAACM,OAAP,CAAe,CAAf,EAAkBC;AAJzB,OAKOC,IAAI,CAACC,EALZ;AAAA;AAAA;AAAA;AAAA,YADF,CADD,gBAWC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAZJ;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;KArBuBX,K","sourcesContent":["import React from \"react\";\n//import cities from '../data';//z\nimport Card from \"./Card\";\n\nexport default function Cards(props) {\n  // acá va tu código\n  // tip, podés usar un map\n\n  return (\n    <div>\n      {props.cities ? (\n        props.cities.map((cities) => (\n          <Card\n            name={cities.name}\n            min={cities.main.temp_min}\n            max={cities.main.temp_max}\n            img={cities.weather[0].icon}\n            key={city.id}\n          />\n        ))\n      ) : (\n        <h2>Error 040, cerebro not found!</h2>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}